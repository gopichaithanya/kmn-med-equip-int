/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SetupEquipmentDetail.java
 *
 * Created on 24 Mei 12, 13:47:23
 */

package com.kmn.gui.setup;

import com.kmn.MainApps;
import com.kmn.backend.entity.MMedEquipment;
import com.kmn.backend.jpa.MMedEquipmentJpaController;
import com.kmn.controller.props.EquipmentDetailProperties;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.jdesktop.application.Action;

/**
 *
 * @author Hermanto
 */
public class SetupEquipmentDetail extends javax.swing.JDialog {
    private MMedEquipmentJpaController jpaEquipment;
    private List<MMedEquipment> listEquipment;
    private EquipmentDetailProperties detail;
    private SetupEquipment setup;

    /** Creates new form SetupEquipmentDetail */

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public SetupEquipmentDetail(SetupEquipment setequip, boolean modal, SetupEquipment setup) {
        super(MainApps.getApplication().getMainFrame(), modal);
        this.setup = setup;
        initComponents();

        this.jpaEquipment = new MMedEquipmentJpaController();
        this.listEquipment = (List <MMedEquipment>)
                this.jpaEquipment.findMMedEquipmentEntities();


        for(MMedEquipment lst : this.listEquipment)
                this.comboCode.addItem(lst.getEquipmentCode());

        this.changeValue();
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelCode = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelType = new javax.swing.JLabel();
        labelCom = new javax.swing.JLabel();
        labelSpeed = new javax.swing.JLabel();
        labelDatabits = new javax.swing.JLabel();
        labelParity = new javax.swing.JLabel();
        labelStopbits = new javax.swing.JLabel();
        labelFlowControl = new javax.swing.JLabel();
        comboCode = new javax.swing.JComboBox();
        textName = new javax.swing.JTextField();
        textType = new javax.swing.JTextField();
        textCom = new javax.swing.JTextField();
        comboSpeed = new javax.swing.JComboBox();
        comboData = new javax.swing.JComboBox();
        comboParity = new javax.swing.JComboBox();
        comboStop = new javax.swing.JComboBox();
        comboFlow = new javax.swing.JComboBox();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        labelInterface = new javax.swing.JLabel();
        comboInterface = new javax.swing.JComboBox();
        labelIp = new javax.swing.JLabel();
        textIp = new javax.swing.JTextField();
        labelPort = new javax.swing.JLabel();
        textPort = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.kmn.MainApps.class).getContext().getResourceMap(SetupEquipmentDetail.class);
        setTitle(resourceMap.getString("Detail Setup.title")); // NOI18N
        setName("Detail Setup"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        labelCode.setText(resourceMap.getString("labelCode.text")); // NOI18N
        labelCode.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelCode.setName("labelCode"); // NOI18N

        labelName.setText(resourceMap.getString("labelName.text")); // NOI18N
        labelName.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelName.setName("labelName"); // NOI18N

        labelType.setText(resourceMap.getString("labelType.text")); // NOI18N
        labelType.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelType.setName("labelType"); // NOI18N

        labelCom.setText(resourceMap.getString("labelCom.text")); // NOI18N
        labelCom.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelCom.setName("labelCom"); // NOI18N

        labelSpeed.setText(resourceMap.getString("labelSpeed.text")); // NOI18N
        labelSpeed.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelSpeed.setName("labelSpeed"); // NOI18N

        labelDatabits.setText(resourceMap.getString("labelDatabits.text")); // NOI18N
        labelDatabits.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelDatabits.setName("labelDatabits"); // NOI18N

        labelParity.setText(resourceMap.getString("labelParity.text")); // NOI18N
        labelParity.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelParity.setName("labelParity"); // NOI18N

        labelStopbits.setText(resourceMap.getString("labelStopbits.text")); // NOI18N
        labelStopbits.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelStopbits.setName("labelStopbits"); // NOI18N

        labelFlowControl.setText(resourceMap.getString("labelFlowControl.text")); // NOI18N
        labelFlowControl.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelFlowControl.setName("labelFlowControl"); // NOI18N

        comboCode.setName("comboCode"); // NOI18N
        comboCode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCodeItemStateChanged(evt);
            }
        });

        textName.setText(resourceMap.getString("textName.text")); // NOI18N
        textName.setEnabled(false);
        textName.setName("textName"); // NOI18N

        textType.setText(resourceMap.getString("textType.text")); // NOI18N
        textType.setEnabled(false);
        textType.setName("textType"); // NOI18N

        textCom.setText(resourceMap.getString("textCom.text")); // NOI18N
        textCom.setName("textCom"); // NOI18N

        comboSpeed.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "110", "300", "1200", "2400", "4800", "9600", "19200", "38400", "57600", "115200", "230400", "460800", "921600" }));
        comboSpeed.setName("comboSpeed"); // NOI18N

        comboData.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "6", "7", "8" }));
        comboData.setName("comboData"); // NOI18N

        comboParity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Even", "Odd", "None", "Mark", "Space" }));
        comboParity.setName("comboParity"); // NOI18N

        comboStop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "1.5", "2" }));
        comboStop.setName("comboStop"); // NOI18N

        comboFlow.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Xon / Xoff", "Hardware", "None" }));
        comboFlow.setName("comboFlow"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.kmn.MainApps.class).getContext().getActionMap(SetupEquipmentDetail.class, this);
        buttonOk.setAction(actionMap.get("okDetail")); // NOI18N
        buttonOk.setIcon(resourceMap.getIcon("buttonOk.icon")); // NOI18N
        buttonOk.setText(resourceMap.getString("buttonOk.text")); // NOI18N
        buttonOk.setName("buttonOk"); // NOI18N

        buttonCancel.setAction(actionMap.get("cancelDetail")); // NOI18N
        buttonCancel.setIcon(resourceMap.getIcon("buttonCancel.icon")); // NOI18N
        buttonCancel.setText(resourceMap.getString("buttonCancel.text")); // NOI18N
        buttonCancel.setName("buttonCancel"); // NOI18N

        labelInterface.setText(resourceMap.getString("labelInterface.text")); // NOI18N
        labelInterface.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelInterface.setName("labelInterface"); // NOI18N

        comboInterface.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COMM", "DICOM" }));
        comboInterface.setName("comboInterface"); // NOI18N
        comboInterface.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboInterfaceItemStateChanged(evt);
            }
        });

        labelIp.setText(resourceMap.getString("labelIp.text")); // NOI18N
        labelIp.setName("labelIp"); // NOI18N

        textIp.setText(resourceMap.getString("textIp.text")); // NOI18N
        textIp.setName("textIp"); // NOI18N

        labelPort.setText(resourceMap.getString("labelPort.text")); // NOI18N
        labelPort.setName("labelPort"); // NOI18N

        textPort.setText(resourceMap.getString("textPort.text")); // NOI18N
        textPort.setName("textPort"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPort)
                    .addComponent(labelCom)
                    .addComponent(labelSpeed)
                    .addComponent(labelDatabits)
                    .addComponent(labelParity)
                    .addComponent(labelStopbits)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCode)
                            .addComponent(labelName)
                            .addComponent(labelType)
                            .addComponent(labelInterface)
                            .addComponent(labelIp)
                            .addComponent(labelFlowControl))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textName, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                            .addComponent(textType)
                            .addComponent(comboInterface, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCode, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIp, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboData, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboParity, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboStop, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboFlow, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textCom, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textPort, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(158, Short.MAX_VALUE)
                .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancel)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInterface)
                    .addComponent(comboInterface, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCode)
                    .addComponent(comboCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelType)
                    .addComponent(textType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPort)
                    .addComponent(textPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCom)
                    .addComponent(textCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSpeed)
                    .addComponent(comboSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDatabits)
                    .addComponent(comboData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelParity)
                    .addComponent(comboParity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStopbits)
                    .addComponent(comboStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFlowControl)
                    .addComponent(comboFlow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel)
                    .addComponent(buttonOk))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboCodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCodeItemStateChanged
        this.changeValue();
    }//GEN-LAST:event_comboCodeItemStateChanged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       this.initValue();
    }//GEN-LAST:event_formWindowActivated

    private void comboInterfaceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboInterfaceItemStateChanged
        this.validateDisplay(comboInterface.getSelectedItem().equals("COMM"));
    }//GEN-LAST:event_comboInterfaceItemStateChanged

    private void validateDisplay(boolean iscom) {
        labelCom.setVisible(iscom);
        textCom.setVisible(iscom);
        labelSpeed.setVisible(iscom);
        comboSpeed.setVisible(iscom);
        labelDatabits.setVisible(iscom);
        comboData.setVisible(iscom);
        labelParity.setVisible(iscom);
        comboParity.setVisible(iscom);
        labelStopbits.setVisible(iscom);
        comboStop.setVisible(iscom);
        labelFlowControl.setVisible(iscom);
        comboFlow.setVisible(iscom);
        labelIp.setVisible(!iscom);
        textIp.setVisible(!iscom);
        labelPort.setVisible(!iscom);
        textPort.setVisible(!iscom);
        pack();
    }

    private void changeValue() {
        for(MMedEquipment lst : listEquipment) {
            if(lst.getEquipmentCode().equalsIgnoreCase((String) this.comboCode.getSelectedItem())) {
                this.textName.setText(lst.getName());
                this.textType.setText(lst.getTypeId().getTypeCode() + " - " + lst.getTypeId().getTypeName());
                break;
            }
        }
    }

    private void initValue() {
        if(detail.getInterfaceType() != null) {
            comboInterface.setSelectedItem(detail.getInterfaceType());
        }
        this.validateDisplay(comboInterface.getSelectedItem().equals("COMM"));
        
        if(detail.getCode() != null) {
            comboCode.setSelectedItem(detail.getCode());
        }
        this.changeValue();
        

        textCom.setText(detail.getCom());
        comboSpeed.setSelectedItem(detail.getRate());
        comboData.setSelectedItem(detail.getDataBit());
        comboParity.setSelectedItem(detail.getParity());
        comboStop.setSelectedItem(detail.getStopBit());
        comboFlow.setSelectedItem(detail.getFlow());
        textIp.setText(detail.getIp());
        textPort.setText(detail.getPort());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JComboBox comboCode;
    private javax.swing.JComboBox comboData;
    private javax.swing.JComboBox comboFlow;
    private javax.swing.JComboBox comboInterface;
    private javax.swing.JComboBox comboParity;
    private javax.swing.JComboBox comboSpeed;
    private javax.swing.JComboBox comboStop;
    private javax.swing.JLabel labelCode;
    private javax.swing.JLabel labelCom;
    private javax.swing.JLabel labelDatabits;
    private javax.swing.JLabel labelFlowControl;
    private javax.swing.JLabel labelInterface;
    private javax.swing.JLabel labelIp;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelParity;
    private javax.swing.JLabel labelPort;
    private javax.swing.JLabel labelSpeed;
    private javax.swing.JLabel labelStopbits;
    private javax.swing.JLabel labelType;
    private javax.swing.JTextField textCom;
    private javax.swing.JTextField textIp;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPort;
    private javax.swing.JTextField textType;
    // End of variables declaration//GEN-END:variables

    public JComboBox getComboCode() {
        return comboCode;
    }

    public JComboBox getComboData() {
        return comboData;
    }

    public JComboBox getComboFlow() {
        return comboFlow;
    }

    public JComboBox getComboParity() {
        return comboParity;
    }

    public JComboBox getComboSpeed() {
        return comboSpeed;
    }

    public JComboBox getComboStop() {
        return comboStop;
    }

    public JTextField getTextCom() {
        return textCom;
    }

    public JTextField getTextName() {
        return textName;
    }

    public JTextField getTextType() {
        return textType;
    }

    public JComboBox getComboInterface() {
        return comboInterface;
    }

    public EquipmentDetailProperties getDetail() {
        return detail;
    }

    public void setDetail(EquipmentDetailProperties detail) {
        this.detail = detail;
    }

    @Action
    public void cancelDetail() {
        setVisible(false);
    }

    @Action
    public void okDetail() {
        boolean isnew = (detail.getCode() == null)?true:false;

        detail.setInterfaceType((String) comboInterface.getSelectedItem());
        detail.setCode((String) comboCode.getSelectedItem());
        detail.setName(textName.getText());
        detail.setType(textType.getText());
        if(comboInterface.getSelectedItem().equals("COMM")) {
            detail.setCom(textCom.getText());
            detail.setRate((String) comboSpeed.getSelectedItem());
            detail.setDataBit((String) comboData.getSelectedItem());
            detail.setParity((String) comboParity.getSelectedItem());
            detail.setStopBit((String) comboStop.getSelectedItem());
            detail.setFlow((String) comboFlow.getSelectedItem());
            detail.setIp("");
            detail.setPort("");
        }
        else {
            detail.setCom("");
            detail.setRate("");
            detail.setDataBit("");
            detail.setParity("");
            detail.setStopBit("");
            detail.setFlow("");
            detail.setIp(textIp.getText());
            detail.setPort(textPort.getText());
        }

        String mssg = "SAVE";
        if(isnew) mssg = setup.addDetail(detail);
        else mssg = setup.editDetail(detail);

        if(mssg.equals("SAVE")) setVisible(false);
        else JOptionPane.showMessageDialog(this, mssg);
    }
}
