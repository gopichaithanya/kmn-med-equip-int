/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpenDialog.java
 *
 * Created on 27 Mei 12, 18:43:01
 */

package com.kmn.gui.workspace;

import com.kmn.MainApps;
import com.kmn.MainView;
import com.kmn.controller.Confirm;
import com.kmn.controller.props.EquipmentDetailProperties;
import com.kmn.controller.props.EquipmentProperties;
import java.awt.Component;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import org.jdesktop.application.Action;

/**
 *
 * @author Hermanto
 */
public class OpenDialog extends javax.swing.JDialog implements Confirm {
    private EquipmentProperties propEuipment = new EquipmentProperties(this);
    private AddNewWorkspace newWorkspace = new AddNewWorkspace(this);
    private MainView mainView;

    /** Creates new form OpenDialog */
    public OpenDialog(MainView mainview, boolean modal) {
        super(MainApps.getApplication().getMainFrame(), modal);
        this.mainView = mainview;
        initComponents();
        initComboEquip();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        comboEquip = new javax.swing.JComboBox();
        labelOpen = new javax.swing.JLabel();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.kmn.MainApps.class).getContext().getResourceMap(OpenDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFocusTraversalPolicyProvider(true);
        setFocusableWindowState(false);
        setIconImage(null);
        setMinimumSize(new java.awt.Dimension(100, 100));
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setEnabled(false);
        jPanel1.setName("PanelEquipment"); // NOI18N

        comboEquip.setName("comboEquip"); // NOI18N

        labelOpen.setFont(resourceMap.getFont("labelOpen.font")); // NOI18N
        labelOpen.setText(resourceMap.getString("labelOpen.text")); // NOI18N
        labelOpen.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelOpen.setName("labelOpen"); // NOI18N
        labelOpen.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.kmn.MainApps.class).getContext().getActionMap(OpenDialog.class, this);
        buttonOk.setAction(actionMap.get("openNewWorkspace")); // NOI18N
        buttonOk.setIcon(resourceMap.getIcon("buttonOk.icon")); // NOI18N
        buttonOk.setText(resourceMap.getString("buttonOk.text")); // NOI18N
        buttonOk.setName("buttonOk"); // NOI18N

        buttonCancel.setAction(actionMap.get("cancelOpen")); // NOI18N
        buttonCancel.setIcon(resourceMap.getIcon("buttonCancel.icon")); // NOI18N
        buttonCancel.setText(resourceMap.getString("buttonCancel.text")); // NOI18N
        buttonCancel.setToolTipText(resourceMap.getString("buttonCancel.toolTipText")); // NOI18N
        buttonCancel.setName("buttonCancel"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelOpen)
                        .addGap(18, 18, 18)
                        .addComponent(comboEquip, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelOpen)
                    .addComponent(comboEquip, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel)
                    .addComponent(buttonOk))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JComboBox comboEquip;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelOpen;
    // End of variables declaration//GEN-END:variables

    //@Override
    public void onSuccess() {
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.kmn.MainApps.class).getContext().getResourceMap(OpenDialog.class);

        EquipmentDetailProperties equipment = (EquipmentDetailProperties) comboEquip.getSelectedItem();
        String title = equipment.toString();
        JTabbedPane tab = mainView.getTabMain();
        
        boolean isnew = true;
        Component[] cmp = tab.getComponents();
        for(int i=0; i<cmp.length; i++) {
            if(equipment.getCode().equals(cmp[i].getName())) {
                isnew = false;
                break;
            }
        }

        if(isnew) {
            WorkspaceModel model = new WorkspaceModel(tab, equipment);
            tab.addTab(title, resourceMap.getIcon("file.tabIcon"),  model);
            tab.setSelectedIndex(tab.getTabCount()-1);

            setVisible(false);
        }
        else JOptionPane.showMessageDialog(this, "Equipment window already open");
    }

    //@Override
    public void onWarning(String message) {
    }

    //@Override
    public void onError(Throwable t) {
    }

    @Action
    public void cancelOpen() {
        setVisible(false);
    }

    @Action
    public void openNewWorkspace() {
        newWorkspace.add();
    }
    
    private void initComboEquip() {
        propEuipment.load();
        List<EquipmentDetailProperties> listEuip = propEuipment.getListDetailEquipment();

        for(EquipmentDetailProperties equip : listEuip) {
            //String code = equip.getCode() +" - "+ equip.getName();
            comboEquip.addItem(equip);
        }
        this.setResizable(true);
    }
}
