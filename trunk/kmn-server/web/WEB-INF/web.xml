<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="kmn" version="2.5">
    <display-name>kmn</display-name>

    <!-- ====================================================== -->
    <!--                  CONFIGURATION FILES                   -->
    <!-- ====================================================== -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext-db.xml
            classpath:applicationContext-hibernate.xml
            classpath:applicationContext-guiControllers.xml
            classpath:applicationContext-guiServices.xml
            classpath:customize-applicationContext.xml
            classpath:springSecurityContext.xml
            classpath:performance-db-logging.xml
            <!--classpath:spring-ws-pox-servlet.xml-->
            classpath:spring-ws-echo-servlet.xml
            <!--classpath:applicationContext-jpa.xml-->
            <!--classpath:applicationContext-service.xml-->
            <!--classpath:applicationContext-security.xml-->
            <!--classpath:applicationContext-ws.xml-->
            <!--classpath:applicationContext-jms.xml-->
        </param-value>
    </context-param>

    <!-- ====================================================== -->
    <!--                  SPRING CONTEXT LOADER                 -->
    <!-- ====================================================== -->
    <listener>
        <display-name>Spring Context Loader</display-name>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- ====================================================== -->
    <!--                  SPRING REQUEST LISTENER               -->
    <!-- ====================================================== -->
    <listener>
        <display-name>Spring Request Context Listener</display-name>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!-- ====================================================== -->
    <!--              SPRING-SECURITY Entry Point               -->
    <!-- ====================================================== -->
    <!--    Here in the web.xml we do only set a reference.     -->
    <!--               The exact configuration is in            -->
    <!--              the SpringSecurityContext.xml             -->
    <!--    Look in the documentation. Spring security works    -->
    <!--           exactly down the chain points.               -->
    <!--           For not declared points in the               -->
    <!--        SpringSecurityContext.xml Spring takes          -->
    <!--                   default values.                      -->

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <!--       Spring-Security is mapped to all URLs       -->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>
            org.springframework.security.web.session.HttpSessionEventPublisher
        </listener-class>
    </listener>
    <!--                         ZKOSS                          -->
    <listener>
        <description>Used to cleanup when a session is destroyed</description>
        <display-name>ZK Session Cleaner</display-name>
        <listener-class>org.zkoss.zk.ui.http.HttpSessionListener</listener-class>
    </listener>

    <servlet>
        <description>The servlet loads the DSP pages.</description>
        <servlet-name>dspLoader</servlet-name>
        <servlet-class>org.zkoss.web.servlet.dsp.InterpreterServlet</servlet-class>
    </servlet>
    <servlet>
        <description>ZK loader for ZUML pages</description>
        <servlet-name>zkLoader</servlet-name>
        <servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>
        <!--
              Must. Specifies URI of the update engine (DHtmlUpdateServlet). It
              must be the same as <url-pattern> for the update engine.
          -->
        <init-param>
            <param-name>update-uri</param-name>
            <param-value>/zkau</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <description>The asynchronous update engine for ZK</description>
        <servlet-name>auEngine</servlet-name>
        <servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>dspLoader</servlet-name>
        <url-pattern>*.dsp</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>zkLoader</servlet-name>
        <url-pattern>*.zul</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>zkLoader</servlet-name>
        <url-pattern>*.zhtml</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>auEngine</servlet-name>
        <url-pattern>/zkau/*</url-pattern>
    </servlet-mapping>
    <welcome-file-list>
        <welcome-file>index.zul</welcome-file>
    </welcome-file-list>
    <distributable/>
    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>
    <!-- POX Web Service -->
    <!-- Defines the Spring-WS MessageDispatcherServlet -->
    <servlet>
        <servlet-name>spring-ws-pox</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
        <init-param>
            <!-- Transform the location attributes in WSDLs -->
            <param-name>transformWsdlLocations</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>

    <!-- Map all wsdl requests to this servlet -->
    <servlet-mapping>
        <servlet-name>spring-ws-pox</servlet-name>
        <url-pattern>*.wsdl</url-pattern>
    </servlet-mapping>
    <!-- Echo SAAJ Web Service -->
    <!-- Defines the Spring-WS MessageDispatcherServlet -->
    <servlet>
        <servlet-name>spring-ws-echo</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
        <init-param>
            <!-- Transform the location attributes in WSDLs -->
            <param-name>transformWsdlLocations</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>

    <!-- Map all wsdl requests to this servlet -->
    <servlet-mapping>
        <servlet-name>spring-ws-echo</servlet-name>
        <url-pattern>*.wsdl</url-pattern>
    </servlet-mapping>
    <!-- SOAP web service -->
    <!--servlet>
        <servlet-name>ws</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ws</servlet-name>
        <url-pattern>/services</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ws</servlet-name>
        <url-pattern>*.wsdl</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>mvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping-->
    <!--welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list-->
    <!--servlet>
        <servlet-name>public-image</servlet-name>
        <servlet-class>org.springframework.web.servlet.ResourceServlet</servlet-class>
    </servlet-->
    <!--servlet-mapping>
        <servlet-name>public-image</servlet-name>
        <url-pattern>/images/*</url-pattern>
    </servlet-mapping-->
</web-app>